polygon(-l_2_rej_2[, 1], l_2_rej_2[, 2], col = "purple")
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
points(my_data[, 1], my_data[, 2], pch = 16, cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(B)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_2 <- MASS::mvrnorm(n = 100, mu = c(max_cutoff * 1.2, 0), Sigma = diag(2))
points(my_data_2[, 1], my_data_2[, 2], pch = 16,
col = where_are_you(my_data_2, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(C)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_3 <- MASS::mvrnorm(n = 100, mu = 1.2 * rep(l_2_cutoff/sqrt(2), 2), Sigma = diag(2))
points(my_data_3[, 1], my_data_3[, 2], pch = 16,
col = where_are_you(my_data_3, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8, cex.lab = 2)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
}
make_three_plot(201)
make_three_plot <- function(seed){
set.seed(seed)
par(mar = c(5, 2.5, 0, 0.5))
my_data <- MASS::mvrnorm(n = 100, mu = rep(0, 2), Sigma = diag(2))
par(mfrow = c(1, 3))
p_xlim <- range(my_data[, 1]) * 1.2
p_ylim <- range(my_data[, 2]) * 1.2
plot(my_data[, 1], my_data[, 2], axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), xlim = p_xlim, ylim = p_ylim,
pch = 16, ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(A)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
mtext(expression(psi[2]), side = 2, line=0.1, las = 2, cex = 1.5)
l_2_cutoff <- quantile(apply(my_data, 1, function(x) sqrt(sum(x ** 2))), 0.95)
l_h_cutoff <- quantile(apply(my_data, 1, function(x) sum(sqrt(abs(x))) ** 2), 0.95)
max_cutoff <- quantile(apply(my_data, 1, function(x) max(abs(x))), 0.95)
cut_seq <- seq(from = -max_cutoff, to = max_cutoff, length.out = 250)
max_line <- cbind(c(-cut_seq, rep(max_cutoff, 250), rev(cut_seq), rep(-max_cutoff, 250)),
c(rep(-max_cutoff, 250), cut_seq, rep(max_cutoff, 250), rev(cut_seq)))
thetas <- seq(from = 0, to = 2 * pi, length.out = 1000)
thetas <- seq(from = 0, to = 2 * pi, length.out = 1000)
l_2_line <- l_2_cutoff * cbind(sin(thetas + 5/4 * pi), cos(thetas + 5/4 * pi))
theta_cut <- asin(max_cutoff/l_2_cutoff)
theta_cut_2 <- acos(max_cutoff/l_2_cutoff)
seq_1 <- seq(from = theta_cut, to = pi - theta_cut, length.out = 1000)
seq_2 <- seq(from = theta_cut_2, to = -theta_cut_2, length.out = 1000)
seq_3 <- seq(from = theta_cut, to = theta_cut_2, length.out = 1000)
max_rej <- l_2_cutoff * cbind(sin(c(seq_1, seq_1[1])), cos(c(seq_1, seq_1[1])))
max_rej_2 <- l_2_cutoff * cbind(sin(c(seq_2, seq_2[1])), cos(c(seq_2, seq_2[1])))
l_2_rej_2 <- cbind(c(l_2_cutoff * sin(seq_3), max_cutoff, max_cutoff),
c(l_2_cutoff * cos(seq_3), max_cutoff, l_2_cutoff * cos(seq_3[1])))
polygon(max_rej[, 1], max_rej[, 2], col = "green")
polygon(- 1 * max_rej[, 1], max_rej[, 2], col = "green")
polygon(max_rej_2[, 1], max_rej_2[, 2], col = "green")
polygon(max_rej_2[, 1], -1 * max_rej_2[, 2], col = "green")
polygon(l_2_rej_2[, 1], l_2_rej_2[, 2], col = "purple")
polygon(l_2_rej_2[, 1], -l_2_rej_2[, 2], col = "purple")
polygon(-l_2_rej_2[, 1], -l_2_rej_2[, 2], col = "purple")
polygon(-l_2_rej_2[, 1], l_2_rej_2[, 2], col = "purple")
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
points(my_data[, 1], my_data[, 2], pch = 16, cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(B)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_2 <- MASS::mvrnorm(n = 100, mu = c(max_cutoff * 1.2, 0), Sigma = diag(2))
points(my_data_2[, 1], my_data_2[, 2], pch = 16,
col = where_are_you(my_data_2, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(C)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_3 <- MASS::mvrnorm(n = 100, mu = 1.2 * rep(l_2_cutoff/sqrt(2), 2), Sigma = diag(2))
points(my_data_3[, 1], my_data_3[, 2], pch = 16,
col = where_are_you(my_data_3, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8, cex.lab = 2)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
}
make_three_plot(201)
make_three_plot <- function(seed){
set.seed(seed)
par(mar = c(5, 2.5, 0, 0.5))
my_data <- MASS::mvrnorm(n = 100, mu = rep(0, 2), Sigma = diag(2))
par(mfrow = c(1, 3))
p_xlim <- range(my_data[, 1]) * 1.2
p_ylim <- range(my_data[, 2]) * 1.2
plot(my_data[, 1], my_data[, 2], axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), xlim = p_xlim, ylim = p_ylim,
pch = 16, ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(A)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
mtext(expression(psi[2]), side = 2, adj = 2, line=0.1, las = 2, cex = 1.5)
browser()
l_2_cutoff <- quantile(apply(my_data, 1, function(x) sqrt(sum(x ** 2))), 0.95)
l_h_cutoff <- quantile(apply(my_data, 1, function(x) sum(sqrt(abs(x))) ** 2), 0.95)
max_cutoff <- quantile(apply(my_data, 1, function(x) max(abs(x))), 0.95)
cut_seq <- seq(from = -max_cutoff, to = max_cutoff, length.out = 250)
max_line <- cbind(c(-cut_seq, rep(max_cutoff, 250), rev(cut_seq), rep(-max_cutoff, 250)),
c(rep(-max_cutoff, 250), cut_seq, rep(max_cutoff, 250), rev(cut_seq)))
thetas <- seq(from = 0, to = 2 * pi, length.out = 1000)
thetas <- seq(from = 0, to = 2 * pi, length.out = 1000)
l_2_line <- l_2_cutoff * cbind(sin(thetas + 5/4 * pi), cos(thetas + 5/4 * pi))
theta_cut <- asin(max_cutoff/l_2_cutoff)
theta_cut_2 <- acos(max_cutoff/l_2_cutoff)
seq_1 <- seq(from = theta_cut, to = pi - theta_cut, length.out = 1000)
seq_2 <- seq(from = theta_cut_2, to = -theta_cut_2, length.out = 1000)
seq_3 <- seq(from = theta_cut, to = theta_cut_2, length.out = 1000)
max_rej <- l_2_cutoff * cbind(sin(c(seq_1, seq_1[1])), cos(c(seq_1, seq_1[1])))
max_rej_2 <- l_2_cutoff * cbind(sin(c(seq_2, seq_2[1])), cos(c(seq_2, seq_2[1])))
l_2_rej_2 <- cbind(c(l_2_cutoff * sin(seq_3), max_cutoff, max_cutoff),
c(l_2_cutoff * cos(seq_3), max_cutoff, l_2_cutoff * cos(seq_3[1])))
polygon(max_rej[, 1], max_rej[, 2], col = "green")
polygon(- 1 * max_rej[, 1], max_rej[, 2], col = "green")
polygon(max_rej_2[, 1], max_rej_2[, 2], col = "green")
polygon(max_rej_2[, 1], -1 * max_rej_2[, 2], col = "green")
polygon(l_2_rej_2[, 1], l_2_rej_2[, 2], col = "purple")
polygon(l_2_rej_2[, 1], -l_2_rej_2[, 2], col = "purple")
polygon(-l_2_rej_2[, 1], -l_2_rej_2[, 2], col = "purple")
polygon(-l_2_rej_2[, 1], l_2_rej_2[, 2], col = "purple")
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
points(my_data[, 1], my_data[, 2], pch = 16, cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(B)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_2 <- MASS::mvrnorm(n = 100, mu = c(max_cutoff * 1.2, 0), Sigma = diag(2))
points(my_data_2[, 1], my_data_2[, 2], pch = 16,
col = where_are_you(my_data_2, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(C)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_3 <- MASS::mvrnorm(n = 100, mu = 1.2 * rep(l_2_cutoff/sqrt(2), 2), Sigma = diag(2))
points(my_data_3[, 1], my_data_3[, 2], pch = 16,
col = where_are_you(my_data_3, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8, cex.lab = 2)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
}
make_three_plot(201)
make_three_plot <- function(seed){
set.seed(seed)
par(mar = c(5, 2.5, 0, 0.5))
my_data <- MASS::mvrnorm(n = 100, mu = rep(0, 2), Sigma = diag(2))
par(mfrow = c(1, 3))
p_xlim <- range(my_data[, 1]) * 1.2
p_ylim <- range(my_data[, 2]) * 1.2
plot(my_data[, 1], my_data[, 2], axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), xlim = p_xlim, ylim = p_ylim,
pch = 16, ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(A)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
mtext(expression(psi[2]), side = 2, adj = -0.1, line=0.1, las = 2, cex = 1.5)
browser()
l_2_cutoff <- quantile(apply(my_data, 1, function(x) sqrt(sum(x ** 2))), 0.95)
l_h_cutoff <- quantile(apply(my_data, 1, function(x) sum(sqrt(abs(x))) ** 2), 0.95)
max_cutoff <- quantile(apply(my_data, 1, function(x) max(abs(x))), 0.95)
cut_seq <- seq(from = -max_cutoff, to = max_cutoff, length.out = 250)
max_line <- cbind(c(-cut_seq, rep(max_cutoff, 250), rev(cut_seq), rep(-max_cutoff, 250)),
c(rep(-max_cutoff, 250), cut_seq, rep(max_cutoff, 250), rev(cut_seq)))
thetas <- seq(from = 0, to = 2 * pi, length.out = 1000)
thetas <- seq(from = 0, to = 2 * pi, length.out = 1000)
l_2_line <- l_2_cutoff * cbind(sin(thetas + 5/4 * pi), cos(thetas + 5/4 * pi))
theta_cut <- asin(max_cutoff/l_2_cutoff)
theta_cut_2 <- acos(max_cutoff/l_2_cutoff)
seq_1 <- seq(from = theta_cut, to = pi - theta_cut, length.out = 1000)
seq_2 <- seq(from = theta_cut_2, to = -theta_cut_2, length.out = 1000)
seq_3 <- seq(from = theta_cut, to = theta_cut_2, length.out = 1000)
max_rej <- l_2_cutoff * cbind(sin(c(seq_1, seq_1[1])), cos(c(seq_1, seq_1[1])))
max_rej_2 <- l_2_cutoff * cbind(sin(c(seq_2, seq_2[1])), cos(c(seq_2, seq_2[1])))
l_2_rej_2 <- cbind(c(l_2_cutoff * sin(seq_3), max_cutoff, max_cutoff),
c(l_2_cutoff * cos(seq_3), max_cutoff, l_2_cutoff * cos(seq_3[1])))
polygon(max_rej[, 1], max_rej[, 2], col = "green")
polygon(- 1 * max_rej[, 1], max_rej[, 2], col = "green")
polygon(max_rej_2[, 1], max_rej_2[, 2], col = "green")
polygon(max_rej_2[, 1], -1 * max_rej_2[, 2], col = "green")
polygon(l_2_rej_2[, 1], l_2_rej_2[, 2], col = "purple")
polygon(l_2_rej_2[, 1], -l_2_rej_2[, 2], col = "purple")
polygon(-l_2_rej_2[, 1], -l_2_rej_2[, 2], col = "purple")
polygon(-l_2_rej_2[, 1], l_2_rej_2[, 2], col = "purple")
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
points(my_data[, 1], my_data[, 2], pch = 16, cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(B)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_2 <- MASS::mvrnorm(n = 100, mu = c(max_cutoff * 1.2, 0), Sigma = diag(2))
points(my_data_2[, 1], my_data_2[, 2], pch = 16,
col = where_are_you(my_data_2, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(C)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_3 <- MASS::mvrnorm(n = 100, mu = 1.2 * rep(l_2_cutoff/sqrt(2), 2), Sigma = diag(2))
points(my_data_3[, 1], my_data_3[, 2], pch = 16,
col = where_are_you(my_data_3, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8, cex.lab = 2)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
}
make_three_plot <- function(seed){
set.seed(seed)
par(mar = c(5, 2.5, 0, 0.5))
my_data <- MASS::mvrnorm(n = 100, mu = rep(0, 2), Sigma = diag(2))
par(mfrow = c(1, 3))
p_xlim <- range(my_data[, 1]) * 1.2
p_ylim <- range(my_data[, 2]) * 1.2
plot(my_data[, 1], my_data[, 2], axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), xlim = p_xlim, ylim = p_ylim,
pch = 16, ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(A)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
mtext(expression(psi[2]), side = 2, adj = -0.1, line=0.1, las = 2, cex = 1.5)
browser()
l_2_cutoff <- quantile(apply(my_data, 1, function(x) sqrt(sum(x ** 2))), 0.95)
l_h_cutoff <- quantile(apply(my_data, 1, function(x) sum(sqrt(abs(x))) ** 2), 0.95)
max_cutoff <- quantile(apply(my_data, 1, function(x) max(abs(x))), 0.95)
cut_seq <- seq(from = -max_cutoff, to = max_cutoff, length.out = 250)
max_line <- cbind(c(-cut_seq, rep(max_cutoff, 250), rev(cut_seq), rep(-max_cutoff, 250)),
c(rep(-max_cutoff, 250), cut_seq, rep(max_cutoff, 250), rev(cut_seq)))
thetas <- seq(from = 0, to = 2 * pi, length.out = 1000)
thetas <- seq(from = 0, to = 2 * pi, length.out = 1000)
l_2_line <- l_2_cutoff * cbind(sin(thetas + 5/4 * pi), cos(thetas + 5/4 * pi))
theta_cut <- asin(max_cutoff/l_2_cutoff)
theta_cut_2 <- acos(max_cutoff/l_2_cutoff)
seq_1 <- seq(from = theta_cut, to = pi - theta_cut, length.out = 1000)
seq_2 <- seq(from = theta_cut_2, to = -theta_cut_2, length.out = 1000)
seq_3 <- seq(from = theta_cut, to = theta_cut_2, length.out = 1000)
max_rej <- l_2_cutoff * cbind(sin(c(seq_1, seq_1[1])), cos(c(seq_1, seq_1[1])))
max_rej_2 <- l_2_cutoff * cbind(sin(c(seq_2, seq_2[1])), cos(c(seq_2, seq_2[1])))
l_2_rej_2 <- cbind(c(l_2_cutoff * sin(seq_3), max_cutoff, max_cutoff),
c(l_2_cutoff * cos(seq_3), max_cutoff, l_2_cutoff * cos(seq_3[1])))
polygon(max_rej[, 1], max_rej[, 2], col = "green")
polygon(- 1 * max_rej[, 1], max_rej[, 2], col = "green")
polygon(max_rej_2[, 1], max_rej_2[, 2], col = "green")
polygon(max_rej_2[, 1], -1 * max_rej_2[, 2], col = "green")
polygon(l_2_rej_2[, 1], l_2_rej_2[, 2], col = "purple")
polygon(l_2_rej_2[, 1], -l_2_rej_2[, 2], col = "purple")
polygon(-l_2_rej_2[, 1], -l_2_rej_2[, 2], col = "purple")
polygon(-l_2_rej_2[, 1], l_2_rej_2[, 2], col = "purple")
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
points(my_data[, 1], my_data[, 2], pch = 16, cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(B)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_2 <- MASS::mvrnorm(n = 100, mu = c(max_cutoff * 1.2, 0), Sigma = diag(2))
points(my_data_2[, 1], my_data_2[, 2], pch = 16,
col = where_are_you(my_data_2, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(C)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_3 <- MASS::mvrnorm(n = 100, mu = 1.2 * rep(l_2_cutoff/sqrt(2), 2), Sigma = diag(2))
points(my_data_3[, 1], my_data_3[, 2], pch = 16,
col = where_are_you(my_data_3, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8, cex.lab = 2)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
}
make_three_plot(201)
mtext(expression(psi[2]), side = 2, adj = 0, line=0.1, las = 2, cex = 1.5)
mtext(expression(psi[2]), side = 2, line=0.1, las = 2, cex = 1.5)
mtext(expression(psi[2]), side = 2, line=0.5, las = 2, cex = 1.5)
mtext(expression(psi[2]), side = 2, las = 2, cex = 1.5)
plot(my_data[, 1], my_data[, 2], axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), xlim = p_xlim, ylim = p_ylim,
pch = 16, ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(A)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
mtext(expression(psi[2]), side = 2, las = 2, cex = 1.5)
mtext(expression(psi[2]), side = 2, las = 2, cex = 1.5, padj = 0.2)
make_three_plot <- function(seed){
set.seed(seed)
par(mar = c(5, 2.5, 0, 0.5))
my_data <- MASS::mvrnorm(n = 100, mu = rep(0, 2), Sigma = diag(2))
par(mfrow = c(1, 3))
p_xlim <- range(my_data[, 1]) * 1.2
p_ylim <- range(my_data[, 2]) * 1.2
plot(my_data[, 1], my_data[, 2], axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), xlim = p_xlim, ylim = p_ylim,
pch = 16, ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(A)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
mtext(expression(psi[2]), side = 2, las = 2, cex = 1.5, padj = 0.2)
browser()
l_2_cutoff <- quantile(apply(my_data, 1, function(x) sqrt(sum(x ** 2))), 0.95)
l_h_cutoff <- quantile(apply(my_data, 1, function(x) sum(sqrt(abs(x))) ** 2), 0.95)
max_cutoff <- quantile(apply(my_data, 1, function(x) max(abs(x))), 0.95)
cut_seq <- seq(from = -max_cutoff, to = max_cutoff, length.out = 250)
max_line <- cbind(c(-cut_seq, rep(max_cutoff, 250), rev(cut_seq), rep(-max_cutoff, 250)),
c(rep(-max_cutoff, 250), cut_seq, rep(max_cutoff, 250), rev(cut_seq)))
thetas <- seq(from = 0, to = 2 * pi, length.out = 1000)
thetas <- seq(from = 0, to = 2 * pi, length.out = 1000)
l_2_line <- l_2_cutoff * cbind(sin(thetas + 5/4 * pi), cos(thetas + 5/4 * pi))
theta_cut <- asin(max_cutoff/l_2_cutoff)
theta_cut_2 <- acos(max_cutoff/l_2_cutoff)
seq_1 <- seq(from = theta_cut, to = pi - theta_cut, length.out = 1000)
seq_2 <- seq(from = theta_cut_2, to = -theta_cut_2, length.out = 1000)
seq_3 <- seq(from = theta_cut, to = theta_cut_2, length.out = 1000)
max_rej <- l_2_cutoff * cbind(sin(c(seq_1, seq_1[1])), cos(c(seq_1, seq_1[1])))
max_rej_2 <- l_2_cutoff * cbind(sin(c(seq_2, seq_2[1])), cos(c(seq_2, seq_2[1])))
l_2_rej_2 <- cbind(c(l_2_cutoff * sin(seq_3), max_cutoff, max_cutoff),
c(l_2_cutoff * cos(seq_3), max_cutoff, l_2_cutoff * cos(seq_3[1])))
polygon(max_rej[, 1], max_rej[, 2], col = "green")
polygon(- 1 * max_rej[, 1], max_rej[, 2], col = "green")
polygon(max_rej_2[, 1], max_rej_2[, 2], col = "green")
polygon(max_rej_2[, 1], -1 * max_rej_2[, 2], col = "green")
polygon(l_2_rej_2[, 1], l_2_rej_2[, 2], col = "purple")
polygon(l_2_rej_2[, 1], -l_2_rej_2[, 2], col = "purple")
polygon(-l_2_rej_2[, 1], -l_2_rej_2[, 2], col = "purple")
polygon(-l_2_rej_2[, 1], l_2_rej_2[, 2], col = "purple")
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
points(my_data[, 1], my_data[, 2], pch = 16, cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(B)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_2 <- MASS::mvrnorm(n = 100, mu = c(max_cutoff * 1.2, 0), Sigma = diag(2))
points(my_data_2[, 1], my_data_2[, 2], pch = 16,
col = where_are_you(my_data_2, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(C)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_3 <- MASS::mvrnorm(n = 100, mu = 1.2 * rep(l_2_cutoff/sqrt(2), 2), Sigma = diag(2))
points(my_data_3[, 1], my_data_3[, 2], pch = 16,
col = where_are_you(my_data_3, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8, cex.lab = 2)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
}
make_three_plot(201)
make_three_plot <- function(seed){
set.seed(seed)
par(mar = c(5, 2.5, 0, 0.5))
my_data <- MASS::mvrnorm(n = 100, mu = rep(0, 2), Sigma = diag(2))
par(mfrow = c(1, 3))
p_xlim <- range(my_data[, 1]) * 1.2
p_ylim <- range(my_data[, 2]) * 1.2
plot(my_data[, 1], my_data[, 2], axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), xlim = p_xlim, ylim = p_ylim,
pch = 16, ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(A)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
mtext(expression(psi[2]), side = 2, las = 2, cex = 1.5, padj = 0.2)
l_2_cutoff <- quantile(apply(my_data, 1, function(x) sqrt(sum(x ** 2))), 0.95)
l_h_cutoff <- quantile(apply(my_data, 1, function(x) sum(sqrt(abs(x))) ** 2), 0.95)
max_cutoff <- quantile(apply(my_data, 1, function(x) max(abs(x))), 0.95)
cut_seq <- seq(from = -max_cutoff, to = max_cutoff, length.out = 250)
max_line <- cbind(c(-cut_seq, rep(max_cutoff, 250), rev(cut_seq), rep(-max_cutoff, 250)),
c(rep(-max_cutoff, 250), cut_seq, rep(max_cutoff, 250), rev(cut_seq)))
thetas <- seq(from = 0, to = 2 * pi, length.out = 1000)
thetas <- seq(from = 0, to = 2 * pi, length.out = 1000)
l_2_line <- l_2_cutoff * cbind(sin(thetas + 5/4 * pi), cos(thetas + 5/4 * pi))
theta_cut <- asin(max_cutoff/l_2_cutoff)
theta_cut_2 <- acos(max_cutoff/l_2_cutoff)
seq_1 <- seq(from = theta_cut, to = pi - theta_cut, length.out = 1000)
seq_2 <- seq(from = theta_cut_2, to = -theta_cut_2, length.out = 1000)
seq_3 <- seq(from = theta_cut, to = theta_cut_2, length.out = 1000)
max_rej <- l_2_cutoff * cbind(sin(c(seq_1, seq_1[1])), cos(c(seq_1, seq_1[1])))
max_rej_2 <- l_2_cutoff * cbind(sin(c(seq_2, seq_2[1])), cos(c(seq_2, seq_2[1])))
l_2_rej_2 <- cbind(c(l_2_cutoff * sin(seq_3), max_cutoff, max_cutoff),
c(l_2_cutoff * cos(seq_3), max_cutoff, l_2_cutoff * cos(seq_3[1])))
polygon(max_rej[, 1], max_rej[, 2], col = "green")
polygon(- 1 * max_rej[, 1], max_rej[, 2], col = "green")
polygon(max_rej_2[, 1], max_rej_2[, 2], col = "green")
polygon(max_rej_2[, 1], -1 * max_rej_2[, 2], col = "green")
polygon(l_2_rej_2[, 1], l_2_rej_2[, 2], col = "purple")
polygon(l_2_rej_2[, 1], -l_2_rej_2[, 2], col = "purple")
polygon(-l_2_rej_2[, 1], -l_2_rej_2[, 2], col = "purple")
polygon(-l_2_rej_2[, 1], l_2_rej_2[, 2], col = "purple")
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
points(my_data[, 1], my_data[, 2], pch = 16, cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(B)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_2 <- MASS::mvrnorm(n = 100, mu = c(max_cutoff * 1.2, 0), Sigma = diag(2))
points(my_data_2[, 1], my_data_2[, 2], pch = 16,
col = where_are_you(my_data_2, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
plot(NULL, xlim = p_xlim, ylim = p_ylim, axes = FALSE, asp = 1,
bty = 'n', panel.first = grid(), ylab = "", xlab = expression(psi[1]),
cex.lab = 2)
mtext("(C)", side = 3, line = -1, adj = 0.1, cex = 1.6, padj = 1)
lines(max_line[, 1], max_line[, 2], col = "blue", lwd = 4)
lines(l_2_line[, 1], l_2_line[, 2], col = "red", lwd = 4)
my_data_3 <- MASS::mvrnorm(n = 100, mu = 1.2 * rep(l_2_cutoff/sqrt(2), 2), Sigma = diag(2))
points(my_data_3[, 1], my_data_3[, 2], pch = 16,
col = where_are_you(my_data_3, max_cut = max_cutoff,
l2_cut =  l_2_cutoff), cex = 1.5)
axis(1, (-4):4, pos = 0, cex.axis = 0.8, cex.lab = 2)
axis(2, (-4):4, pos = 0, cex.axis = 0.8, las = 2)
}
##################################################
## Sample Size Calculations for Biostat 524
## Author: Adam Elder
##################################################
des_pow <- 0.9
des_alpha <- 0.05
true_haz_ratio <- 0.65
calc_samp_size <- function(pow, alpha, hr, event_rate, std_length, events = FALSE){
numerator <- (qnorm(1 - alpha) + qnorm(pow))**2
denomntor <- (1/2 * log(hr)) ** 2
num_events <- numerator/denomntor
if(events){
return(ceiling(num_events))
}else{
return(num_events * (1/event_rate) * (1/std_length))
}
}
calc_samp_size(0.9, 0.05, 0.6, 3/1000, 10)
pos_hr <- seq(from = 0.4, to = 0.8, length.out = 1000)
plot(pos_hr, calc_samp_size(0.9, 0.05, pos_hr, 3/1000, 10), type = "l")
calc_pow <- function(ss, alpha, hr, event_rate, std_length, events = FALSE){
num_events <- ss * event_rate * std_length
if(events){
num_events <- ss
}
std_dev <- 2/sqrt(num_events)
cutoff <- std_dev * qnorm(c(0.025, 0.975))
l_hr <- log(hr)
pow <- pnorm(cutoff[1], mean = l_hr, sd = std_dev, lower.tail = TRUE) +
pnorm(cutoff[2], mean = l_hr, sd = std_dev, lower.tail = FALSE)
return(pow)
}
samp_sizes <- 1000 * 1:8
hrs        <- 0.1 * 2:9
sim_settings <- expand.grid(samp_sizes, hrs)
sim_settings$pow <- NA
for(bb in 1:nrow(sim_settings)){
bb_pow <- calc_pow(sim_settings[bb, 1], alpha = 0.05,
sim_settings[bb, 2],
event_rate = 3/1000, 10)
sim_settings[bb, "pow"] <- bb_pow
}
disp_tbl <- round(spread(sim_settings, key = Var2, value = pow), 3)
write.csv(disp_tbl, "~/Desktop/ss_table.csv")
par(mfrow = c(1, 1))
calc_samp_size(0.9, 0.05, 0.66, "TRUE", 5, events = FALSE)
calc_samp_size(0.9, 0.05, 0.66, "TRUE", 5, events = TRUE)
